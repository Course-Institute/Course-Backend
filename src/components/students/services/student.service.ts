import studentDal from "../dals/student.dal";

const addStudent = async ({
    candidateName,
    motherName,
    fatherName,
    gender,
    dob,
    adharNumber,
    category,
    areYouEmployed,
    employerName,
    designation,
    contactNumber,
    alternateNumber,
    email,
    currentAddress,
    parmanentAddress,
    city,
    state,
    nationality,
    country,
    pincode,
    courseType,
    faculty,
    course,
    stream,
    year,
    monthSession,
    hostelFacility,
    session,
    duration,
    courseFee,
    aadharFront,
    aadharBack,
    photo,
    signature
}:{
    candidateName: string, 
    motherName: string, 
    fatherName: string, 
    gender: string, 
    dob: string, 
    adharNumber: string, 
    category: string, 
    areYouEmployed: string, 
    employerName: string, 
    designation: string, 
    contactNumber: string, 
    alternateNumber: string, 
    email: string, 
    currentAddress: string, 
    parmanentAddress: string, 
    city: string, 
    state: string, 
    nationality: string, 
    country: string, 
    pincode: string, 
    courseType: string, 
    faculty: string, 
    course: string, 
    stream: string, 
    year: string, 
    monthSession: string, 
    hostelFacility: string, 
    session: string, 
    duration: string, 
    courseFee: string, 
    aadharFront: Express.Multer.File, 
    aadharBack: Express.Multer.File, 
    photo: Express.Multer.File, 
    signature: Express.Multer.File
}) => {
    try {
        const student = await studentDal.addStudentDal({
            candidateName, 
            motherName, 
            fatherName, 
            gender, 
            dob, 
            adharNumber, 
            category, 
            areYouEmployed, 
            employerName, 
            designation, 
            contactNumber, 
            alternateNumber, 
            email, 
            currentAddress, 
            parmanentAddress, 
            city, 
            state, 
            nationality, 
            country, 
            pincode, 
            courseType, 
            faculty, 
            course, 
            stream, 
            year, 
            monthSession, 
            hostelFacility, 
            session, 
            duration, 
            courseFee, 
            aadharFront: aadharFront?.path || '', 
            aadharBack: aadharBack?.path || '', 
            photo: photo?.path || '', 
            signature: signature?.path || ''
        });
        return student;
    } catch (error) {
        console.log(error);
        throw error;
    }
};

export default { addStudent };
